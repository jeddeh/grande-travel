@model GrandeTravel.Site.Models.Packages.PackagesViewModel

@using GrandeTravel.Site.Helpers
@using GrandeTravel.Entity.Enums

@{
    ViewBag.Title = "Edit Package";
    ViewBag.Keywords = "";
    ViewBag.Description = "";
}

@section styles {
    <link href="~/Content/clearcanvas/membership.css" rel="stylesheet" />
}

<div id="membership" class="register">
    <div class="container">
        <div class="row">

            <div class="col-md-12 admin-form">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <fieldset>
                        <legend>Edit Package</legend>

                        <div class="row">
                            <section class="col-md-3"></section>
                            <section class="col-md-6">

                                <header class="register-header">
                                    <div class="header">
                                        <h4>Edit Package</h4>
                                    </div>
                                </header>

                                <div>
                                    @Html.HiddenFor(model => model.Id)
                                </div>

                                <div class="form-group">
                                    @Html.TextBoxFor(model => model.PackageName, new { @readonly = "readonly", @class = "form-control" })
                                </div>

                                <div class="form-group">
                                    @Html.EditorFor(model => model.City, new { maxlength = 50 })
                                    @Html.ValidationMessageFor(model => model.City)
                                </div>

                                <div class="form-group">
                                    @Html.DropDownListFor(model => model.State,
                                        SelectListItemHelper.GetEnumSelectListItems<AustralianStateEnum>(),
                                        new { @class = "form-control" })

                                    @Html.ValidationMessageFor(model => model.State)
                                </div>

                                <div class="form-group">
                                    @Html.EditorFor(model => model.Accomodation, new { maxlength = 100 })
                                    @Html.ValidationMessageFor(model => model.Accomodation)
                                </div>

                                <div class="form-group">
                                    @Html.EditorFor(model => model.Price, new { maxlength = 8 })
                                    @Html.ValidationMessageFor(model => model.Price)
                                </div>

                            </section>
                        </div>

                        @{
                    if (Model.ErrorMessage != null)
                    {
                        <p class="error-message">@Model.ErrorMessage</p>
                    }
                    else if (Model.SuccessMessage != null)
                    {
                        <p class="success-message">@Model.SuccessMessage</p>
                            <div>
                                <a class="btn btn-primary membership-submit register-submit" href="@Url.Action("ProviderSearch", "Packages")">Back to My Packages</a>
                            </div>
                    }
                    else
                    {
                        <div>
                            <button type="submit" class="btn btn-primary membership-submit register-submit">Submit</button>
                        </div>
                    }
                        }
                    </fieldset>
                }

            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
