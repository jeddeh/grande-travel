@model GrandeTravel.Site.Models.Packages.ShowMapViewModel

@using GrandeTravel.Site.Models.Packages

@{
    ViewBag.Title = "Package Map";
    ViewBag.Keywords = "";
    ViewBag.Description = "";
}

@section styles {
    <meta name="viewport" content="width=device-width" />

    <style>
        html, body, #map-canvas {
            height: 90%;
            margin: 0px;
            padding: 0px;
        }
    </style>

    @Styles.Render("~/Content/clearcanvas/theme.css")
}

@if (ViewData.ModelState.IsValid)
{
    <div id="map-canvas"></div>
}
else
{
    <section class="container">
        <div class="row">
            <div class="col-md-12 payment-result">
                <div class="text-center error-message">
                    @Html.ValidationMessage("ErrorMessage")
                </div>
            </div>
        </div>
    </section>
}


@section Scripts{
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false"></script>

    <script>
        "use strict"


        function initialize() {
            var locations = [];
            @{
            foreach (LocationModel location in Model.Locations)
                    {@:
                                                                                                    @:locations.push({Name : '@location.ActivityName', Address : '@location.ActivityAddress', Latitude : @location.Latitude, Longitude : @location.Longitude});
                                                                                                }
                }

            if (locations.length == 0) {
                return;
            }

            var mapOptions = {
                zoom: 9,
                center: new google.maps.LatLng(locations[0].Latitude, locations[0].Longitude),
                mapTypeId: google.maps.MapTypeId.HYBRID
            }

            var map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);

            // Add the markers to the map
            for (var i = 0; i < locations.length; i++) {
                var marker = new google.maps.Marker({
                    position: new google.maps.LatLng(locations[i].Latitude, locations[i].Longitude),
                    title: locations[i].Name
                });

                marker.setMap(map);
            }
        }

        google.maps.event.addDomListener(window, 'load', initialize);
    </script>
}
