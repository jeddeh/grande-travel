@model GrandeTravel.Site.Models.Packages.SearchPackagesViewModel

@using GrandeTravel.Entity;

@{
    ViewBag.Title = "Search Packages";
    ViewBag.Keywords = "";
    ViewBag.Description = "";
}

@section styles {
    <link href="~/Content/typeahead.css" rel="stylesheet" />
    <link href="~/Content/clearcanvas/packages.css" rel="stylesheet" />
    <link href="~/Content/isotope.css" rel="stylesheet" />
}

<div id="packages">
    <div class="container">

        <header class="section-header large-margin-header">
            <h3>Packages</h3>
        </header>

        <section id="sectionSearchLocation">
            <div>
                <h4><i><span id="filterHeading">Showing all locations</span></i></h4>
            </div>

            <section class="row">
                <div class="col-md-6">
                    <div class="input-group">
                        <input id="txtSearch" class="form-control" type="search" maxlength="30" placeholder="Search By Location" />
                        <div class="input-group-btn">
                            <button id="btnSearch" class="btn btn-success" type="button">
                                <i class="glyphicon glyphicon-search"></i>
                            </button>
                        </div>
                    </div>
                </div>

                <div class="col-md-2">
                    <input style="margin-right: 30px" type="button" class="btn btn-primary" value="All Locations" id="btnAllLocations" />
                </div>
            </section>
        </section>

        <br />
        <br />

        <section class="row">
            <div class="col-md-12">
                <div id="gallery_container">

                    <!-- Modal -->
                    @{Html.RenderPartial("_Partial_OrderPackageModal");}


                    @{
                        if (Model.Packages == null || Model.Packages.Count == 0)
                        {
                            <p>Sorry, we are unable to display our packages at this time.</p>
                        }
                        else
                        {
                            try
                            {
                                foreach (Package package in Model.Packages)
                                {
                                    <div class="package-image active-image">

                                        <img src="@Url.Content(package.ImageUrl)" class="img-responsive gridImage" />

                                        <section class="image-data">
                                            &nbsp;
                                            <section class="image-data-holder">
                                                <h3 class="packageName">
                                                    <a href="#" id="@package.PackageId" class="package-link">@package.Name</a>
                                                </h3>

                                                <small>
                                                    <span class="city">@package.City</span>, <span class="state">@package.State</span>
                                                </small>
                                                <br /><br />

                                                <div>
                                                    @Html.ActionLink("Show Activities on Map", "ShowMap", "Packages",
                                                    new { PackageId = @package.PackageId },
                                                    new { style = "text-decoration: underline" })
                                                </div>

                                                <div>
                                                    @{
                                    string feedbackId = "feedback" + package.PackageId;
                                    <a href="#" class="feedback-link" id=@feedbackId>Show Feedback for this Package</a>
                                                    }
                                                </div>
                                            </section>
                                            &nbsp;
                                        </section>

                                    </div>
                                }
                            }
                            catch
                            {
                                <p>Sorry, we are unable to display our packages at this time.</p>
                            }
                        }
                    }

                </div>
            </div>
        </section>

    </div>
</div>


@section Scripts {
    <script src="~/Scripts/jquery.isotope.min.js"></script>
    <script src="~/Scripts/typeahead-v0.10.2.js"></script>
    <script src="~/Scripts/Site/locations-search.js"></script>

    <script>
        $(document).ready(function () {
            $("a.feedback-link").click(function (event) {
                event.preventDefault();

                // feedbackId is the Package Id for the feedback.
                var feedbackId = event.currentTarget.id.substring(8);
                var feedbackHtml = "";

                if (isNaN(parseInt(feedbackId, 10)) || !isFinite(feedbackId)) {
                    bootbox.alert("Unable to get the feedback for this package.");
                    return false;
                }

                $.ajax({
                    url: "/Orders/GetFeedbackDetails",
                    data: "id=" + feedbackId,
                    type: "GET",
                    success: function (data) {
                        if (data.length === 0) {
                            bootbox.alert("No feedback has been given for this package.");
                            return;
                        }

                        feedbackHtml = "<ul>";
                        for (var i = 0; i < data.length; i++) {
                            feedbackHtml += "<li>" + data[i] + "</li>";
                        }
                        feedbackHtml += "</ul>";

                       bootbox.alert(feedbackHtml);
                        return;
                    },
                    error: function (xhr, status, error) {
                        bootbox.alert("Unable to get the feedback for this package.");
                        return false;
                    }
                });
            });
        });
    </script>
}
