@model GrandeTravel.Site.Models.RegisterUserViewModel

@{
    ViewBag.Title = "Register";
    ViewBag.Keywords = "";
    ViewBag.Description = "";
}

@section styles {
    <link href="~/Content/clearcanvas/membership.css" rel="stylesheet" />
}

<div id="membership" class="register">
    <div class="container">
        <div class="row">

            <div class="col-md-12 admin-form">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <fieldset>
                        <legend>Create Account</legend>

                        <header class="register-header">
                            <div class="header">
                                <h4>Create your account</h4>
                            </div>
                        </header>

                        <div class="row">
                            <section class="col-md-6">

                                <div class="form-group">
                                    @Html.EditorFor(model => model.Email)
                                    @Html.ValidationMessageFor(model => model.Email)
                                    <span class="field-validation-error" id="emailExistsValidator"></span>
                                    @Html.ValidationMessage("EmailAlreadyExists")
                                </div>

                                <div class="form-group">
                                    @Html.EditorFor(model => model.Password)
                                    @Html.ValidationMessageFor(model => model.Password)
                                </div>

                                <div class="form-group">
                                    @Html.EditorFor(model => model.ConfirmPassword)
                                    @Html.ValidationMessageFor(model => model.ConfirmPassword)
                                </div>


                                <div class="check-provider">
                                    @Html.CheckBoxFor(model => model.IsProvider)
                                    @Html.LabelFor(model => model.IsProvider, "I want to register as a travel provider.")
                                </div>

                                <div class="has-account">
                                    <span>Already have an account?</span>
                                    @Html.ActionLink("Login", "Index", "Login")
                                </div>

                                <div class="register-error">
                                    <p class="error-message">@Html.ValidationMessage("ErrorMessage")</p>
                                </div>

                            </section>

                            @{Html.RenderPartial("_Partial_UserDetails");}

                        </div>

                        <div>
                            <button type="submit" class="btn btn-primary membership-submit register-submit">Register</button>
                        </div>

                    </fieldset>
                }

            </div>
        </div>
    </div>
</div>

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")

    <script>
        // AJAX validation for email address
        $(document).ready(function () {

            var isEmailValid = true;

            $("#Email").blur(function () {
                var json = { email: $("#Email").val() };

                $.ajax({
                    url: "@Url.Action("ValidateEmail", "Membership")",
                    type: "POST",
                    contentType: "application/json;charset=utf-8",
                    data: JSON.stringify(json),
                    success: function (response) {
                        if (response == "Invalid") {
                            $("#emailExistsValidator").html("The Email address is already in use.");
                            isEmailValid = false;
                        }
                        else {
                            $("#emailExistsValidator").html("");
                            isEmailValid = true;
                        }
                    },
                    error: function (xhr, status, error) {
                        // Do nothing
                    }
                });
            });
        });

     
    </script>
}